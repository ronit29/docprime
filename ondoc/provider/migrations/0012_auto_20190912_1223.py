# Generated by Django 2.0.5 on 2019-09-12 06:53

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('diagnostic', '0227_merge_20190912_1205'),
        ('doctor', '0314_merge_20190911_1911'),
        ('provider', '0011_rocketchatsuperuser'),
    ]

    operations = [
        migrations.CreateModel(
            name='PartnerHospitalLabMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_labs', to='doctor.Hospital')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_hospitals', to='diagnostic.Lab')),
            ],
            options={
                'db_table': 'partner_hospital_lab_mapping',
            },
        ),
        migrations.CreateModel(
            name='PartnerLabSamplesCollectOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient_details', django.contrib.postgres.fields.jsonb.JSONField()),
                ('collection_datetime', models.DateTimeField(blank=True, null=True)),
                ('samples', django.contrib.postgres.fields.jsonb.JSONField()),
                ('selected_tests_details', django.contrib.postgres.fields.jsonb.JSONField()),
                ('status', models.SmallIntegerField(choices=[(1, 'Sample Extraction Pending'), (2, 'Sample Scan Pending'), (3, 'Sample Pickup Pending'), (4, 'Sample Picked Up'), (5, 'Partial Report Generated'), (6, 'Report Generated'), (7, 'Report Viewed')])),
                ('available_lab_tests', models.ManyToManyField(related_name='tests_lab_samples_collect_order', to='diagnostic.AvailableLabTest')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doc_lab_samples_collect_order', to='doctor.Doctor')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hosp_lab_samples_collect_order', to='doctor.Hospital')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_samples_collect_order', to='diagnostic.Lab')),
            ],
            options={
                'db_table': 'partner_lab_samples_collect_order',
            },
        ),
        migrations.CreateModel(
            name='PartnerLabTestSampleDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('volume', models.PositiveIntegerField(blank=True, null=True)),
                ('volume_unit', models.CharField(blank=True, choices=[('ml', 'ml')], default=None, max_length=16, null=True)),
                ('is_fasting_required', models.BooleanField(default=False)),
                ('report_tat', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('reference_value', models.CharField(blank=True, max_length=64, null=True)),
                ('material_required', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('instructions', models.CharField(blank=True, max_length=256, null=True)),
                ('available_lab_test', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sample_details', to='diagnostic.AvailableLabTest')),
            ],
            options={
                'db_table': 'partner_lab_test_sample_details',
            },
        ),
        migrations.CreateModel(
            name='PartnerLabTestSamples',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'partner_lab_test_samples',
            },
        ),
        migrations.CreateModel(
            name='PartnerLabTestSamplesOrderReportMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report', models.FileField(upload_to='provider/cloud-lab/reports', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpeg', 'jpg', 'png'])])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='provider.PartnerLabSamplesCollectOrder')),
            ],
            options={
                'db_table': 'partner_lab_test_sample_order_report_mapping',
            },
        ),
        migrations.CreateModel(
            name='TestSamplesLabAlerts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'test_samples_lab_alerts',
            },
        ),
        migrations.AddField(
            model_name='partnerlabtestsampledetails',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='provider.PartnerLabTestSamples'),
        ),
        migrations.AddField(
            model_name='partnerlabsamplescollectorder',
            name='lab_alerts',
            field=models.ManyToManyField(to='provider.TestSamplesLabAlerts'),
        ),
        migrations.AddField(
            model_name='partnerlabsamplescollectorder',
            name='offline_patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_lab_samples_collect_order', to='doctor.OfflinePatients'),
        ),
    ]
